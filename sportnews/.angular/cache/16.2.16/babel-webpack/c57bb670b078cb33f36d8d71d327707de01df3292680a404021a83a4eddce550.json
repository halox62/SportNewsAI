{"ast":null,"code":"// app.component.ts\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.logout());\n    });\n    i0.ɵɵtext(5, \"Logout\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Benvenuto \", (tmp_0_0 = i0.ɵɵpipeBind1(3, 1, ctx_r0.auth.user$)) == null ? null : tmp_0_0.name, \"\");\n  }\n}\nfunction AppComponent_ng_template_2_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_2_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.login());\n    });\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AppComponent_ng_template_2_button_0_Template, 2, 0, \"button\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isBrowser);\n  }\n}\nexport class AppComponent {\n  constructor(auth, platformId) {\n    this.auth = auth;\n    this.platformId = platformId;\n    this.isBrowser = false;\n  }\n  ngOnInit() {\n    // Controlla se siamo in browser\n    this.isBrowser = isPlatformBrowser(this.platformId);\n    if (this.isBrowser) {\n      // Esempio: puoi fare subscription solo in browser\n      this.auth.isAuthenticated$.subscribe(loggedIn => {\n        console.log('Utente loggato:', loggedIn);\n      });\n    }\n  }\n  login() {\n    if (this.isBrowser) {\n      this.auth.loginWithRedirect();\n    }\n  }\n  logout() {\n    if (this.isBrowser) {\n      this.auth.logout({\n        logoutParams: {\n          returnTo: window.location.origin\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 5,\n      vars: 4,\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loggedOut\", \"\"], [3, \"click\"], [3, \"click\", 4, \"ngIf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AppComponent_div_0_Template, 6, 3, \"div\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵtemplate(2, AppComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelement(4, \"router-outlet\");\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isBrowser && i0.ɵɵpipeBind1(1, 2, ctx.auth.isAuthenticated$))(\"ngIfElse\", _r1);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterOutlet, i2.AsyncPipe],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["PLATFORM_ID","isPlatformBrowser","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_div_0_Template_button_click_4_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","logout","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","ctx_r0","auth","user$","name","AppComponent_ng_template_2_button_0_Template_button_click_0_listener","_r7","ctx_r6","login","ɵɵtemplate","AppComponent_ng_template_2_button_0_Template","ɵɵproperty","ctx_r2","isBrowser","AppComponent","constructor","platformId","ngOnInit","isAuthenticated$","subscribe","loggedIn","console","log","loginWithRedirect","logoutParams","returnTo","window","location","origin","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","AppComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵelement","_r1"],"sources":["/Users/giorgiomartucci/ProjectSD/sportnews/src/app/app.component.ts"],"sourcesContent":["// app.component.ts\nimport { Component, Inject, PLATFORM_ID, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: false,\n  template: `\n    <div *ngIf=\"isBrowser && (auth.isAuthenticated$ | async); else loggedOut\">\n      <p>Benvenuto {{ (auth.user$ | async)?.name }}</p>\n      <button (click)=\"logout()\">Logout</button>\n    </div>\n    <ng-template #loggedOut>\n      <button *ngIf=\"isBrowser\" (click)=\"login()\">Login</button>\n    </ng-template>\n\n    <!-- Qui si renderizzano i componenti della route -->\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent implements OnInit {\n  isBrowser = false;\n\n  constructor(\n    public auth: AuthService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngOnInit() {\n    // Controlla se siamo in browser\n    this.isBrowser = isPlatformBrowser(this.platformId);\n\n    if (this.isBrowser) {\n      // Esempio: puoi fare subscription solo in browser\n      this.auth.isAuthenticated$.subscribe(loggedIn => {\n        console.log('Utente loggato:', loggedIn);\n      });\n    }\n  }\n\n  login() {\n    if (this.isBrowser) {\n      this.auth.loginWithRedirect();\n    }\n  }\n\n  logout() {\n    if (this.isBrowser) {\n      this.auth.logout({ logoutParams: { returnTo: window.location.origin } });\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}